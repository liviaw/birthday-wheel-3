{"version":3,"sources":["Components/LogIn/LogIn.module.css","Components/WheelCanvas/WheelCanvas.module.css","app.module.css","Components/SendGift/SendGift.module.css","Components/WheelCanvas/WheelCanvas.tsx","Images/birthdayCake.gif","Images/birthdayBalloon.gif","Components/BirthdayMessage/BirthdayMessage.tsx","Components/Quiz/index.tsx","Components/LogIn/LogIn.tsx","Images/mail.gif","Components/SendGift/SendGift.tsx","App.tsx","reportWebVitals.ts","index.tsx","Components/Quiz/quiz.module.css","Components/BirthdayMessage/birthdayMessage.module.css"],"names":["module","exports","WheelCanvas","segments","segColors","winningSegment","onFinished","onConfirmed","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","currentSegment","currentSegmentIndex","isStarted","useState","isFinished","setFinished","prize","setPrize","timerHandle","timerDelay","length","angleCurrent","angleDelta","canvasContext","maxSpeed","Math","PI","upTime","downTime","spinStart","frames","centerX","centerY","colorPickerRef","React","createRef","useEffect","wheelInit","setTimeout","window","scrollTo","initCanvas","wheelDraw","canvas","document","getElementById","navigator","appVersion","indexOf","createElement","setAttribute","appendChild","addEventListener","spin","current","getContext","Date","getTime","setInterval","onTimerTick","draw","duration","progress","finished","sin","clearInterval","clear","drawWheel","drawNeedle","drawSegment","key","lastAngle","angle","ctx","value","save","beginPath","moveTo","arc","lineTo","closePath","picked","fillStyle","fill","stroke","translate","rotate","font","fillText","substr","restore","len","PI2","lineWidth","strokeStyle","textBaseline","textAlign","i","fileStyle","change","floor","clearRect","id","className","styles","root","ref","width","height","style","pointerEvents","Button","confirm","onClick","BirthdayMessage","name","continueShowChoices","index","setIndex","showButton","setShowButton","texts","intervalId","clearTimeout","rootFlex","src","birthdayCake","gifContainter","alt","birthdayMessage","text","springConfig","presets","gentle","birthdayBalloon","href","link","QuizItem","img","points","onSelect","onDeselect","unavailable","selected","setSelected","handleClick","useCallback","prev","classnames","quizItem","halftone","item","overlay","split","items","Quiz","continueShowMessage","setPoints","counter","setCounter","useMemo","console","log","handleSelect","handleDeselect","map","continueButton","visible","LogIn","setName","nameInput","setNameInput","fadeOut","setFadeOut","fadeout","onSubmit","event","preventDefault","input","type","onChange","element","currentTarget","target","SendGift","mail","App","showWheel","setShowWheel","showChoices","setShowChoices","wheelSpinned","setWheelSpinned","confirmGift","setConfirmGift","removePrize","app","winner","run","tweenDuration","onConfettiComplete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8e479f64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LogIn_root__vHi4v\",\"fadeout\":\"LogIn_fadeout__2d5d_\",\"input\":\"LogIn_input__39dGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"WheelCanvas_root__3FmFe\",\"confirm\":\"WheelCanvas_confirm__Um2Xc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__3ALCk\",\"logo\":\"app_logo__2B4qm\",\"logo-spin\":\"app_logo-spin__3ajEN\",\"header\":\"app_header__2ppV5\",\"link\":\"app_link__3MCMi\",\"container\":\"app_container__2JKVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SendGift_root__3wSYA\",\"fadeIn\":\"SendGift_fadeIn__1HUqg\"};","import React, { useEffect, useState } from 'react'\nimport styles from \"./WheelCanvas.module.css\";\nimport { Button } from 'react-bootstrap';\n\nexport type WheelProps = {\n    segments: prizeItem[],\n    segColors: string[],\n    winningSegment: string,\n    onFinished: (msg: string, index: number) => void,\n    onConfirmed: () => void,\n    primaryColor: string,\n    contrastColor: string,\n    buttonText: string,\n    isOnlyOnce: boolean,\n    size: number,\n    upDuration: number,\n    downDuration: number,\n    fontFamily: string,\n}\n\nexport type prizeItem = {\n    value: string,\n    picked: boolean,\n  }\n  \nexport const WheelCanvas: React.FC<WheelProps> = ({\n    segments,\n    segColors,\n    winningSegment,\n    onFinished,\n    onConfirmed,\n    primaryColor,\n    contrastColor,\n    buttonText,\n    isOnlyOnce = true,\n    size = 290,\n    upDuration = 100,\n    downDuration = 1000,\n    fontFamily = 'proxima-nova'\n}) => {\n  let currentSegment = ''\n  let currentSegmentIndex = 0;\n  let isStarted = false\n  const [isFinished, setFinished] = useState(false);\n  const [pick, setPicked] = useState([]);\n  const[prize, setPrize] = useState<string>(\"\");\n  let timerHandle: any = 0;\n  const timerDelay: number = segments.length\n  let angleCurrent = 0\n  let angleDelta = 0\n  let canvasContext: any = null\n  let maxSpeed = Math.PI / segments.length\n  const upTime: number = segments.length * upDuration\n  const downTime = segments.length * downDuration\n  let spinStart = 0\n  let frames = 0\n  const centerX = 300\n  const centerY = 300\n  let colorPickerRef = React.createRef<HTMLCanvasElement>();\n  useEffect(() => {\n    wheelInit()\n    setTimeout(() => {\n      window.scrollTo(0, 1)\n    }, 0)\n  }, [])\n  const wheelInit = () => {\n    initCanvas()\n    wheelDraw()\n  }\n\n  const initCanvas = () => {\n    let canvas = document.getElementById('canvas')\n    if (navigator.appVersion.indexOf('MSIE') !== -1) {\n      canvas = document.createElement('canvas')\n      canvas.setAttribute('width', '1000')\n      canvas.setAttribute('height', '600')\n      canvas.setAttribute('id', 'canvas')\n      document.getElementById('wheel')?.appendChild(canvas)\n    }\n    canvas?.addEventListener('click', spin, false)\n    // canvasContext = canvas.getContext('2d')\n    if (colorPickerRef.current) {\n        canvasContext = colorPickerRef.current.getContext('2d');\n    }\n  }\n  const spin = () => {\n    isStarted = true\n    if (timerHandle === 0) {\n      spinStart = new Date().getTime()\n      // maxSpeed = Math.PI / ((segments.length*2) + Math.random())\n      maxSpeed = Math.PI / segments.length\n      frames = 0\n      timerHandle = setInterval(onTimerTick, timerDelay);\n    }\n  }\n  const onTimerTick = () => {\n    frames++\n    draw()\n    const duration = new Date().getTime() - spinStart\n    let progress = 0\n    let finished = false\n    if (duration < upTime) {\n      progress = duration / upTime\n      angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2)\n    } else {\n      if (winningSegment) {\n        if (currentSegment === winningSegment && frames > segments.length) {\n          progress = duration / upTime\n          angleDelta =\n            maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2)\n          progress = 1\n        } else {\n          progress = duration / downTime\n          angleDelta =\n            maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2)\n        }\n      } else {\n        progress = duration / downTime\n        angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2)\n      }\n      if (progress >= 1) finished = true\n    }\n\n    angleCurrent += angleDelta\n    while (angleCurrent >= Math.PI * 2) angleCurrent -= Math.PI * 2\n    if (finished) {\n        // const ctx = canvasContext;\n        // ctx.fillStyle = segColors[2]\n        // let lastAngle = angleCurrent\n        // darkenSegment(currentSegmentIndex, lastAngle);\n        draw();\n      setFinished(true)\n      onFinished(currentSegment, currentSegmentIndex)\n      clearInterval(timerHandle)\n      timerHandle = 0\n      angleDelta = 0\n      setPrize(currentSegment)\n    }\n  }\n\n  const darkenSegment = (key: number, lastAngle: number) => {\n    const ctx = canvasContext\n    const value = segments[key].value\n    ctx.save()\n    ctx.beginPath()\n    ctx.moveTo(centerX, centerY)\n    ctx.lineTo(centerX, centerY)\n    ctx.closePath()\n    if (segments[key].picked) {\n        ctx.fillStyle = segColors[2]\n    } else {\n        ctx.fillStyle = segColors[key % 2]\n    }\n    ctx.fill()\n    ctx.stroke()\n    ctx.save()\n    ctx.translate(centerX, centerY)\n    ctx.fillStyle = contrastColor || 'white'\n    ctx.font = 'bold 1em ' + fontFamily\n    ctx.fillText(value.substr(0, 21), size / 2 + 20, 0)\n    // ctx.fillText(\"hi\", 2, 0);\n    ctx.restore()\n  }\n\n\n  const wheelDraw = () => {\n    clear()\n    drawWheel()\n    drawNeedle()\n  }\n\n  const draw = () => {\n    clear()\n    drawWheel()\n    drawNeedle()\n  }\n\n  const drawSegment = (key: number, lastAngle: number, angle: number) => {\n    const ctx = canvasContext\n    const value = segments[key].value\n    ctx.save()\n    ctx.beginPath()\n    ctx.moveTo(centerX, centerY)\n    ctx.arc(centerX, centerY, size, lastAngle, angle, false)\n    ctx.lineTo(centerX, centerY)\n    ctx.closePath()\n    if (segments[key].picked) {\n        ctx.fillStyle = segColors[2]\n    } else {\n        ctx.fillStyle = segColors[key % 2]\n    }\n    ctx.fill()\n    ctx.stroke()\n    ctx.save()\n    ctx.translate(centerX, centerY)\n    ctx.rotate((lastAngle + angle) / 2)\n    ctx.fillStyle = contrastColor || 'white'\n    ctx.font = 'bold 1em ' + fontFamily\n    ctx.fillText(value.substr(0, 21), size / 2 + 20, 0)\n    // ctx.fillText(\"hi\", 2, 0);\n    ctx.restore()\n  }\n\n  const drawWheel = () => {\n    const ctx = canvasContext\n    let lastAngle = angleCurrent\n    const len = segments.length\n    const PI2 = Math.PI * 2\n    ctx.lineWidth = 1\n    ctx.strokeStyle = primaryColor || 'black'\n    ctx.textBaseline = 'middle'\n    ctx.textAlign = 'center'\n    ctx.font = '1em ' + fontFamily\n    for (let i = 1; i <= len; i++) {\n      const angle = PI2 * (i / len) + angleCurrent\n      drawSegment(i - 1, lastAngle, angle)\n      lastAngle = angle\n    }\n\n    // Draw a center circle\n    ctx.beginPath()\n    ctx.arc(centerX, centerY, 50, 0, PI2, false)\n    ctx.closePath()\n    ctx.fillStyle = primaryColor || 'black'\n    ctx.lineWidth = 10\n    ctx.strokeStyle = contrastColor || 'white'\n    ctx.fill()\n    ctx.font = 'bold 1em ' + fontFamily\n    ctx.fillStyle = contrastColor || 'white'\n    ctx.textAlign = 'center'\n    ctx.fillText(buttonText || 'Spin', centerX, centerY + 3)\n    ctx.stroke()\n\n    // Draw outer circle\n    ctx.beginPath()\n    ctx.arc(centerX, centerY, size, 0, PI2, false)\n    ctx.closePath()\n\n    ctx.lineWidth = 10\n    ctx.strokeStyle = primaryColor || 'black'\n    ctx.stroke()\n  }\n/*\n    let lastAngle = angleCurrent\n    const len = segments.length\n    const PI2 = Math.PI * 2\n    ctx.lineWidth = 1\n    ctx.strokeStyle = primaryColor || 'black'\n    ctx.textBaseline = 'middle'\n    ctx.textAlign = 'center'\n    ctx.font = '1em ' + fontFamily\n    for (let i = 1; i <= len; i++) {\n      const angle = PI2 * (i / len) + angleCurrent\n      drawSegment(i - 1, lastAngle, angle)\n*/\n  const drawNeedle = () => {\n    const ctx = canvasContext\n    ctx.lineWidth = 1\n    ctx.strokeStyle = contrastColor || 'white'\n    ctx.fileStyle = contrastColor || 'white'\n    ctx.beginPath()\n    ctx.moveTo(centerX + 20, centerY - 50)\n    ctx.lineTo(centerX - 20, centerY - 50)\n    ctx.lineTo(centerX, centerY - 70)\n    ctx.closePath()\n    ctx.fill()\n    const change = angleCurrent + Math.PI / 2\n    let i =\n      segments.length -\n      Math.floor((change / (Math.PI * 2)) * segments.length) -\n      1\n    if (i < 0) i = i + segments.length\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.fillStyle = primaryColor || 'black'\n    ctx.font = 'bold 1.5em ' + fontFamily\n    currentSegment = segments[i].value\n    currentSegmentIndex = i;\n    isStarted && ctx.fillText(currentSegment, centerX + 10, centerY + size + 50)\n    \n  }\n  const clear = () => {\n    const ctx = canvasContext\n    ctx.clearRect(0, 0, 1000, 800)\n  }\n  return (\n    <div id='wheel' className={styles.root}>\n        {\n            prize === \"\" ? <h1>Spin the wheel!</h1> :\n            <h1>You won a very special: {prize}</h1>\n        }\n      <canvas\n        ref={colorPickerRef}\n        id='canvas'\n        width='1000'\n        height='800'\n        style={{\n          pointerEvents: isFinished && isOnlyOnce ? 'none' : 'auto'\n        }}\n      />\n      {isFinished && \n      <Button\n        className={styles.confirm}\n        onClick={onConfirmed}\n        >Confirmed\n      </Button>}\n    </div>\n  )\n}\n\n// courtesy of https://codepen.io/deab/pen/gObXawr\n// https://www.npmjs.com/package/react-wheel-of-prizes\n// and https://github.com/weibenfalk/vanilla-js-wheel-of-fortune\n","export default __webpack_public_path__ + \"static/media/birthdayCake.5004c9cb.gif\";","export default __webpack_public_path__ + \"static/media/birthdayBalloon.e7e58333.gif\";","import React, { useEffect, useState } from \"react\";\nimport styles from \"./birthdayMessage.module.css\";\nimport birthdayCake from '../../Images/birthdayCake.gif';\nimport birthdayBalloon from '../../Images/birthdayBalloon.gif';\nimport TextTransition, { presets } from \"react-text-transition\";\nimport { Button } from 'react-bootstrap';\n\ntype Props = {\n    name: string;\n    continueShowChoices: () => void;\n}\n\nexport const BirthdayMessage: React.FC<Props> = ({name, continueShowChoices}) => {\n    const [index, setIndex] = React.useState(0);\n    const message = \"Happy birthday Name!\";\n    const [showButton, setShowButton] = useState(false); \n    const texts = [\n        `Happy birthday ${name}!`,\n        \"are you ready to spin the birthday wheel?\"\n    ]\n    useEffect(() => {\n        const intervalId = setTimeout(() =>{\n            setIndex(index => index + 1)\n            setShowButton(true);\n        },\n          1500 // after 1.5 seconds\n        );\n        return () => clearTimeout(intervalId);\n      }, []);\n    return(\n        <div className={styles.root}>\n\n        <div className={styles.rootFlex}>\n            <img src={birthdayCake} className={styles.gifContainter} alt=\"birthday cake...\" />\n            <h1 className={styles.birthdayMessage}>\n            <TextTransition\n                text={ texts[index % texts.length] }\n                springConfig={ presets.gentle }\n                />\n            </h1>\n            {/* <h1 className={styles.birthdayMessage}>Happy birthday {name} !</h1> */}\n            <img src={birthdayBalloon} className={styles.gifContainter} alt=\"birthday balloon\" />\n        </div>\n            {showButton &&\n                <div>\n                    <Button onClick={continueShowChoices}>\n                    yes\n                </Button>\n                <Button>\n                <a href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\" className={styles.link}>\n                    no\n                    </a>\n                </Button>\n                </div>\n            }\n            </div>\n    )\n}","import { useCallback, useEffect, useState, useMemo } from 'react';\nimport styles from './quiz.module.css';\nimport classnames from 'classnames';\n\nconst QuizItem = ({\n  img,\n  points,\n  onSelect,\n  onDeselect,\n  unavailable,\n}: {\n  img: string;\n  points: number;\n  onSelect(points: number): void;\n  onDeselect(points: number): void;\n  unavailable: boolean;\n}) => {\n  const [selected, setSelected] = useState(false);\n\n  const handleClick = useCallback(() => {\n    selected ? onDeselect(points) : onSelect(points);\n\n    setSelected((prev) => !prev);\n  }, [onSelect, onDeselect, selected]);\n\n  return (\n    <div\n      className={classnames(styles.quizItem, {\n        [styles.selected]: selected,\n        [styles.unavailable]: unavailable && !selected,\n      })}\n      onClick={handleClick}\n    >\n      <img src=\"halftone.png\" className={styles.halftone} />\n      <img src={img} className={styles.item} />\n      {selected ? (\n        <div className={styles.overlay}>\n          <span>{img.split('.')[0]}</span>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst items = [\n  { img: 'armchair.webp', points: 1 },\n  { img: 'donut.webp', points: 3 },\n  { img: 'grapes.webp', points: 5 },\n  { img: 'flowers.webp', points: 4 },\n  { img: 'light-bulb.webp', points: 1 },\n  { img: 'sushi.webp', points: 4 },\n  { img: 'mango.webp', points: 3 },\n  { img: 'popcorn.webp', points: 2 },\n  { img: 'tv.webp', points: 2 },\n  { img: 'cheese.webp', points: 5 },\n];\n\n// 2 points => Book\n// 3 - 5 points => Uber eats\n// 6 - 7 points => Messina\n// 8 points => Provider\n// 9 - 14 points => Wine\ntype props = {\n  continueShowMessage: () => void,\n}\n\nexport const Quiz: React.FC<props>  = ({continueShowMessage}) => {\n  const [points, setPoints] = useState(0);\n  const [counter, setCounter] = useState(0);\n  const prize = useMemo(() => {\n    if (points === 2) {\n      return 'book';\n    }\n\n    if (points > 2 && points < 6) {\n      return 'uber eats';\n    }\n\n    if (points > 5 && points < 8) {\n      return 'messina';\n    }\n\n    if (points === 8) {\n      return 'provider';\n    }\n\n    return '';\n  }, [points]);\n\n  useEffect(() => {\n    if (counter === 2) {\n      console.log(prize);\n    }\n  }, [counter, prize]);\n\n  const handleSelect = useCallback((points: number) => {\n    setCounter((prev) => prev + 1);\n    setPoints((prev) => prev + points);\n  }, []);\n\n  const handleDeselect = useCallback((points: number) => {\n    setCounter((prev) => prev - 1);\n    setPoints((prev) => prev - points);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <h1>first, we need you to select 2 things here that speak to you...</h1>\n      {items.map((item) => (\n        <QuizItem\n          {...item}\n          key={item.img}\n          onSelect={handleSelect}\n          onDeselect={handleDeselect}\n          unavailable={counter === 2}\n        />\n      ))}\n      <button onClick={continueShowMessage} className={classnames(styles.continueButton, { [styles.visible]: counter === 2 })}>\n        Continue\n      </button>\n    </div>\n  );\n};\n","import React, { ReactHTML, useEffect, useState } from 'react'\nimport styles from \"./LogIn.module.css\";\n\ntype Props = {\n    setName: (name: string) => void;\n}\n\nexport const LogIn: React.FC<Props> = ({\n    setName\n}) => {\n    const [nameInput, setNameInput] = useState<string>(\"\");\n    const [fadeOut, setFadeOut] = useState<boolean>(false);\n    const handleSubmit = (event: React.FormEvent) => {\n        event.preventDefault();\n        setName(nameInput);\n        setFadeOut(true);\n    }\n\n    const handleChange = (event: React.FormEvent) => {\n        const element = event.currentTarget as HTMLInputElement;\n        setNameInput(element.value);\n    }\n    return(\n        <div className={fadeOut? styles.fadeout : styles.root}>\n            <h1>Who are you?</h1>\n            <form onSubmit={handleSubmit}>\n                <label>Enter your name: </label>\n                <input className={styles.input} type=\"text\" value={nameInput}  onChange={handleChange}/>\n            </form>\n            <a href=\"https://canva.okta.com/login/login.htm\" target=\"_blank\"> or Log In with Okta</a>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/mail.7c5f271f.gif\";","import React, { ReactHTML, useEffect, useState } from 'react'\nimport styles from \"./SendGift.module.css\";\n// import sendEmail from '../../Images/sendEmail.mp4';\nimport mail from '../../Images/mail.gif';\n\ntype Props = {\n}\n\nexport const SendGift: React.FC<Props> = ({\n\n}) => {\n    return(\n        <div className={styles.root}>\n            <h1>yay! your prize will be sent to you shortly</h1>\n            <img src={mail}/>\n        </div>\n    )\n}\n","import React, { Component, useState } from 'react';\nimport { WheelCanvas } from './Components/WheelCanvas/WheelCanvas';\nimport { BirthdayMessage } from './Components/BirthdayMessage/BirthdayMessage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Quiz } from './Components/Quiz';\nimport styles from './app.module.css';\nimport type { prizeItem } from './Components/WheelCanvas/WheelCanvas';\nimport Confetti from 'react-confetti';\nimport { LogIn } from './Components/LogIn/LogIn';\nimport { SendGift } from './Components/SendGift/SendGift';\n\nfunction App() {\n  const segments: prizeItem[] = [\n    {\n      value: 'oh ouh nothing',\n      picked: false\n    },\n    {\n      value: 'Car',\n      picked: false\n    },\n    {\n      value: 'water bottle',\n      picked: false\n    },\n    {\n      value: 'Nutella Jar',\n      picked: false\n    },\n    {\n      value: 'Trip to Barcelona',\n      picked: false\n    },\n    {\n      value: 'plant of your choice',\n      picked: false\n    },\n  ]\n  const segColors = [\n    '#BE8FFA',\n    '#E2CFFA',\n    '#4F445D'\n  ]\n  const [showWheel, setShowWheel] = useState(false);\n  const [showChoices, setShowChoices] = useState(false);\n  const [wheelSpinned, setWheelSpinned] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [confirmGift, setConfirmGift] = useState(false);\n  const continueShowChoices = () => {\n    setShowChoices(true);\n    console.log(\"show choices\")\n  }\n  const onFinished = (winner: string, index: number) => {\n    removePrize(index);\n    setWheelSpinned(true);\n    console.log(winner)\n  }\n  \n  const removePrize = (index: number) => {\n    segments[index].picked = true;\n  }\n  \n  const continueShowWheel = () => {\n    setShowWheel(true);\n  }\n\n  const continueConfirmGift = () => {\n    // put into gsheet\n    setConfirmGift(true)\n  }\n  return (\n// okta sign in https://canva.okta.com/signin/verify/okta/password\n    <div className={styles.app}>\n      <LogIn setName={setName}/>\n      {/* <Switch>\n      <Route path=\"/history\" component={History} />\n      </Switch> */}\n      {name !== \"\" && !showChoices && <BirthdayMessage name={name} continueShowChoices={continueShowChoices}/>}\n      {showChoices && !showWheel && <Quiz continueShowMessage={continueShowWheel}/>}\n      {showWheel && <WheelCanvas\n        segments={segments}\n        segColors={segColors}\n        winningSegment='won 10'\n        onFinished={(winner: string, index: number) => onFinished(winner, index)}\n        onConfirmed={continueConfirmGift}\n        primaryColor='black'\n        contrastColor='white'\n        buttonText='Spin'\n        isOnlyOnce={false}\n        size={290}\n        upDuration={100}\n        downDuration={1000}\n        fontFamily='Gatwick Bold'\n        />}\n        <Confetti\n          run={wheelSpinned}\n          tweenDuration={100}\n          onConfettiComplete={() => {\n            setWheelSpinned(false);\n          }}\n        />\n        {confirmGift && <SendGift/>}\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"quiz_root__3RZAB\",\"quizItem\":\"quiz_quizItem__1sMCF\",\"halftone\":\"quiz_halftone__Xsoez\",\"item\":\"quiz_item__1HUEX\",\"move\":\"quiz_move__2uDPA\",\"selected\":\"quiz_selected__JL7xS\",\"overlay\":\"quiz_overlay__2G312\",\"movetext\":\"quiz_movetext__1PfFD\",\"continueButton\":\"quiz_continueButton__1Sdsy\",\"visible\":\"quiz_visible__3baMa\",\"unavailable\":\"quiz_unavailable__33d9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootFlex\":\"birthdayMessage_rootFlex__2GpWj\",\"root\":\"birthdayMessage_root__RLw6f\",\"fadeIn\":\"birthdayMessage_fadeIn__2vGvA\",\"gifContainter\":\"birthdayMessage_gifContainter__tKjtw\",\"birthdayMessage\":\"birthdayMessage_birthdayMessage__5ykq0\",\"link\":\"birthdayMessage_link__3Vnob\"};"],"sourceRoot":""}